version: 2.1

executors:
  node:
    docker:
      - image: cimg/node:16.15.0
    working_directory: ~/project
  mac_ios:
    macos:
      xcode: '14.1'
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
      FL_OUTPUT_DIR: output
    working_directory: ~/project
  mac_android:
    docker:
      - image: circleci/android:api-29-node
    working_directory: ~/project

commands:
  attach_project:
    steps:
      - attach_workspace:
          at: ~/project
  config_dependencies:
    steps:
      - run: brew install xcodegen

jobs:
  install-dependencies:
    executor: mac_ios
    steps:
      - checkout
      - attach_project
      - config_dependencies
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-
      - run:
          name: Install dependencies
          command: |
            yarn install --frozen-lockfile
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules

  lint:
    executor: mac_ios
    steps:
      - attach_project
      - run:
          name: Lint files
          command: |
            yarn lint

  unit-tests:
    executor: mac_ios
    steps:
      - attach_project
      - run:
          name: Run unit tests
          command: |
            yarn test:ci
      - store_artifacts:
          path: coverage
          destination: coverage

  build-iOS:
    executor: mac_ios
    steps:
      - checkout
      - attach_project

      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-

      - run:
          command: |
            yarn install --frozen-lockfile

      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      - restore_cache:
          keys:
            - bundle-{{ checksum "ios/Gemfile.lock" }}
            - bundle-

      - restore_cache:
          keys:
            - pods-{{ checksum "ios/Podfile.lock" }}
            - pods-

      - run:
          name: Generate Xcode project
          command: |
            xcodegen generate
          working_directory: ios

      - run:
          name: Install pods
          command: |
            pod install
          working_directory: ios

      - run:
          name: Bundle iOS
          command: |
            bundle install
          working_directory: ios

      - save_cache:
          key: bundle-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor/bundle

      - save_cache:
          key: pods-{{ checksum "ios/Podfile.lock" }}
          paths:
            - ios/Pods

      - store_artifacts:
          path: output
          destination: output

  build-android:
    executor: mac_android
    steps:
      - checkout
      - attach_project

      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-

      - run:
          command: |
            yarn install --frozen-lockfile

      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
            - bundle-

      - run:
          name: Bundle Android
          command: |
            bundle install
          working_directory: android

      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - store_artifacts:
          path: test-results

workflows:
  build-and-test:
    jobs:
      - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - unit-tests:
          requires:
            - install-dependencies
      - build-iOS:
          requires:
            - install-dependencies
            - lint
            - unit-tests
      - build-android:
          requires:
            - install-dependencies
            - lint
            - unit-tests
